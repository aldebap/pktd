// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metaservice.proto

package lnrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetInfo2Request struct {
	InfoResponse         *GetInfoResponse `protobuf:"bytes,1,opt,name=InfoResponse,proto3" json:"InfoResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetInfo2Request) Reset()         { *m = GetInfo2Request{} }
func (m *GetInfo2Request) String() string { return proto.CompactTextString(m) }
func (*GetInfo2Request) ProtoMessage()    {}
func (*GetInfo2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3fb5294949b9545, []int{0}
}

func (m *GetInfo2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfo2Request.Unmarshal(m, b)
}
func (m *GetInfo2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfo2Request.Marshal(b, m, deterministic)
}
func (m *GetInfo2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfo2Request.Merge(m, src)
}
func (m *GetInfo2Request) XXX_Size() int {
	return xxx_messageInfo_GetInfo2Request.Size(m)
}
func (m *GetInfo2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfo2Request.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfo2Request proto.InternalMessageInfo

func (m *GetInfo2Request) GetInfoResponse() *GetInfoResponse {
	if m != nil {
		return m.InfoResponse
	}
	return nil
}

type GetInfo2Response struct {
	Neutrino             *NeutrinoInfo    `protobuf:"bytes,1,opt,name=neutrino,proto3" json:"neutrino,omitempty"`
	Wallet               *WalletInfo      `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Lightning            *GetInfoResponse `protobuf:"bytes,3,opt,name=lightning,proto3" json:"lightning,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetInfo2Response) Reset()         { *m = GetInfo2Response{} }
func (m *GetInfo2Response) String() string { return proto.CompactTextString(m) }
func (*GetInfo2Response) ProtoMessage()    {}
func (*GetInfo2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3fb5294949b9545, []int{1}
}

func (m *GetInfo2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfo2Response.Unmarshal(m, b)
}
func (m *GetInfo2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfo2Response.Marshal(b, m, deterministic)
}
func (m *GetInfo2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfo2Response.Merge(m, src)
}
func (m *GetInfo2Response) XXX_Size() int {
	return xxx_messageInfo_GetInfo2Response.Size(m)
}
func (m *GetInfo2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfo2Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfo2Response proto.InternalMessageInfo

func (m *GetInfo2Response) GetNeutrino() *NeutrinoInfo {
	if m != nil {
		return m.Neutrino
	}
	return nil
}

func (m *GetInfo2Response) GetWallet() *WalletInfo {
	if m != nil {
		return m.Wallet
	}
	return nil
}

func (m *GetInfo2Response) GetLightning() *GetInfoResponse {
	if m != nil {
		return m.Lightning
	}
	return nil
}

func init() {
	proto.RegisterType((*GetInfo2Request)(nil), "lnrpc.GetInfo2Request")
	proto.RegisterType((*GetInfo2Response)(nil), "lnrpc.GetInfo2Response")
}

func init() { proto.RegisterFile("metaservice.proto", fileDescriptor_b3fb5294949b9545) }

var fileDescriptor_b3fb5294949b9545 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xa9, 0xe2, 0xb2, 0x9d, 0x15, 0x74, 0x23, 0x68, 0xe9, 0x49, 0x8a, 0x07, 0x3d, 0xd8,
	0x42, 0xf5, 0xa4, 0x37, 0x2f, 0xa2, 0xb0, 0x1e, 0xea, 0x41, 0xf0, 0xd6, 0x8d, 0x63, 0x5b, 0x36,
	0x9b, 0xc4, 0x64, 0xaa, 0x2f, 0xe4, 0x83, 0x4a, 0x93, 0xd4, 0x45, 0x05, 0x0f, 0x81, 0xc9, 0x9f,
	0x2f, 0x1f, 0xc3, 0x0f, 0xf3, 0x35, 0x52, 0x6d, 0xd1, 0xbc, 0x77, 0x1c, 0x73, 0x6d, 0x14, 0x29,
	0xb6, 0x23, 0xa4, 0xd1, 0x3c, 0x8d, 0xf5, 0x8a, 0x7c, 0x92, 0xc6, 0x46, 0x73, 0x3f, 0x66, 0x0b,
	0xd8, 0xbb, 0x45, 0xba, 0x93, 0xaf, 0xaa, 0xac, 0xf0, 0xad, 0x47, 0x4b, 0xec, 0x0a, 0x76, 0x87,
	0x7b, 0x85, 0x56, 0x2b, 0x69, 0x31, 0x89, 0x8e, 0xa3, 0xd3, 0x59, 0x79, 0x98, 0x3b, 0x4d, 0x1e,
	0xe8, 0xf1, 0xb5, 0xfa, 0xc1, 0x66, 0x9f, 0x11, 0xec, 0x6f, 0x7c, 0x3e, 0x64, 0x05, 0x4c, 0x25,
	0xf6, 0x64, 0x3a, 0xa9, 0x82, 0xec, 0x20, 0xc8, 0x1e, 0x42, 0xec, 0x1c, 0xdf, 0x10, 0x3b, 0x83,
	0xc9, 0x47, 0x2d, 0x04, 0x52, 0xb2, 0xe5, 0xf0, 0x79, 0xc0, 0x9f, 0x5c, 0xe8, 0xe0, 0x00, 0xb0,
	0x4b, 0x88, 0x45, 0xd7, 0xb4, 0x24, 0x3b, 0xd9, 0x24, 0xdb, 0xff, 0x6e, 0xba, 0x01, 0xcb, 0x7b,
	0x98, 0x2d, 0x90, 0xea, 0x47, 0xdf, 0x13, 0xbb, 0x86, 0xe9, 0xb8, 0x34, 0xfb, 0xf5, 0x7b, 0x6c,
	0x25, 0x3d, 0xfa, 0x93, 0x7b, 0xed, 0xcd, 0xc9, 0x73, 0xd6, 0x74, 0xd4, 0xf6, 0xcb, 0x9c, 0xab,
	0x75, 0xa1, 0x57, 0x74, 0xce, 0x6b, 0xdb, 0x0e, 0xc3, 0x4b, 0x21, 0xe4, 0x70, 0x8c, 0xe6, 0xcb,
	0x89, 0xab, 0xfb, 0xe2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xbb, 0xf6, 0xcc, 0xa0, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetaServiceClient is the client API for MetaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaServiceClient interface {
	GetInfo2(ctx context.Context, in *GetInfo2Request, opts ...grpc.CallOption) (*GetInfo2Response, error)
}

type metaServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetaServiceClient(cc *grpc.ClientConn) MetaServiceClient {
	return &metaServiceClient{cc}
}

func (c *metaServiceClient) GetInfo2(ctx context.Context, in *GetInfo2Request, opts ...grpc.CallOption) (*GetInfo2Response, error) {
	out := new(GetInfo2Response)
	err := c.cc.Invoke(ctx, "/lnrpc.MetaService/GetInfo2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaServiceServer is the server API for MetaService service.
type MetaServiceServer interface {
	GetInfo2(context.Context, *GetInfo2Request) (*GetInfo2Response, error)
}

// UnimplementedMetaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetaServiceServer struct {
}

func (*UnimplementedMetaServiceServer) GetInfo2(ctx context.Context, req *GetInfo2Request) (*GetInfo2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo2 not implemented")
}

func RegisterMetaServiceServer(s *grpc.Server, srv MetaServiceServer) {
	s.RegisterService(&_MetaService_serviceDesc, srv)
}

func _MetaService_GetInfo2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfo2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServiceServer).GetInfo2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lnrpc.MetaService/GetInfo2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServiceServer).GetInfo2(ctx, req.(*GetInfo2Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lnrpc.MetaService",
	HandlerType: (*MetaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo2",
			Handler:    _MetaService_GetInfo2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metaservice.proto",
}
